// <auto-generated />
using System;
using GameHubAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameHubAPI.Migrations
{
    [DbContext(typeof(GameHubAPIDbContext))]
    partial class GameHubAPIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("GameHubAPI.Models.AmizadeModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("usuario1id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("usuario2id")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("usuario1id");

                    b.HasIndex("usuario2id");

                    b.ToTable("Amizade");
                });

            modelBuilder.Entity("GameHubAPI.Models.BibliotecaModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("nome")
                        .HasColumnType("TEXT");

                    b.Property<int?>("usuarioid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("usuarioid");

                    b.ToTable("Biblioteca");
                });

            modelBuilder.Entity("GameHubAPI.Models.CategoriaModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("nome")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("GameHubAPI.Models.CompraModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("dataCompra")
                        .HasColumnType("TEXT");

                    b.Property<string>("metodoPagamento")
                        .HasColumnType("TEXT");

                    b.Property<double>("total")
                        .HasColumnType("REAL");

                    b.Property<int?>("usuarioid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("usuarioid");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("GameHubAPI.Models.ConquistaModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("pontos")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("Conquista");
                });

            modelBuilder.Entity("GameHubAPI.Models.DesenvolvedoraModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("categoriaid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("porte")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("categoriaid");

                    b.ToTable("Desenvolvedora");
                });

            modelBuilder.Entity("GameHubAPI.Models.GameplayConquistaModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("conquistaid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("data")
                        .HasColumnType("TEXT");

                    b.Property<int?>("gameplayid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("conquistaid");

                    b.HasIndex("gameplayid");

                    b.ToTable("GameplayConquista");
                });

            modelBuilder.Entity("GameHubAPI.Models.GameplayModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("dataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("dataInicio")
                        .HasColumnType("TEXT");

                    b.Property<int?>("jogoid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("usuarioid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("jogoid");

                    b.HasIndex("usuarioid");

                    b.ToTable("Gameplay");
                });

            modelBuilder.Entity("GameHubAPI.Models.ImagemJogoModel", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("TEXT");

                    b.Property<int?>("jogoid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("jogoid");

                    b.ToTable("ImagemJogo");
                });

            modelBuilder.Entity("GameHubAPI.Models.JogoModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("dataLancamento")
                        .HasColumnType("TEXT");

                    b.Property<string>("descricao")
                        .HasColumnType("TEXT");

                    b.Property<int?>("desenvolvedoraid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("nome")
                        .HasColumnType("TEXT");

                    b.Property<double>("preco")
                        .HasColumnType("REAL");

                    b.HasKey("id");

                    b.HasIndex("desenvolvedoraid");

                    b.ToTable("Jogo");
                });

            modelBuilder.Entity("GameHubAPI.Models.NoticiaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Categoriaid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Usuarioid")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Categoriaid");

                    b.HasIndex("Usuarioid");

                    b.ToTable("Noticia");
                });

            modelBuilder.Entity("GameHubAPI.Models.ProgressoConquistaModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("conquistaid")
                        .HasColumnType("INTEGER");

                    b.Property<double>("progresso")
                        .HasColumnType("REAL");

                    b.Property<int?>("usuarioid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("conquistaid");

                    b.HasIndex("usuarioid");

                    b.ToTable("ProgressoConquista");
                });

            modelBuilder.Entity("GameHubAPI.Models.PromocaoModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("categoriaid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("dataFinal")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("dataInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("categoriaid");

                    b.ToTable("Promocao");
                });

            modelBuilder.Entity("GameHubAPI.Models.UsuarioModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("dataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.Property<string>("nickName")
                        .HasColumnType("TEXT");

                    b.Property<string>("nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("senha")
                        .HasColumnType("TEXT");

                    b.Property<string>("status")
                        .HasColumnType("TEXT");

                    b.Property<bool>("usuarioAtivado")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("GameHubAPI.Models.AmizadeModel", b =>
                {
                    b.HasOne("GameHubAPI.Models.UsuarioModel", "usuario1")
                        .WithMany()
                        .HasForeignKey("usuario1id");

                    b.HasOne("GameHubAPI.Models.UsuarioModel", "usuario2")
                        .WithMany()
                        .HasForeignKey("usuario2id");

                    b.Navigation("usuario1");

                    b.Navigation("usuario2");
                });

            modelBuilder.Entity("GameHubAPI.Models.BibliotecaModel", b =>
                {
                    b.HasOne("GameHubAPI.Models.UsuarioModel", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioid");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("GameHubAPI.Models.CompraModel", b =>
                {
                    b.HasOne("GameHubAPI.Models.UsuarioModel", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioid");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("GameHubAPI.Models.DesenvolvedoraModel", b =>
                {
                    b.HasOne("GameHubAPI.Models.CategoriaModel", "categoria")
                        .WithMany()
                        .HasForeignKey("categoriaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");
                });

            modelBuilder.Entity("GameHubAPI.Models.GameplayConquistaModel", b =>
                {
                    b.HasOne("GameHubAPI.Models.ConquistaModel", "conquista")
                        .WithMany()
                        .HasForeignKey("conquistaid");

                    b.HasOne("GameHubAPI.Models.GameplayModel", "gameplay")
                        .WithMany()
                        .HasForeignKey("gameplayid");

                    b.Navigation("conquista");

                    b.Navigation("gameplay");
                });

            modelBuilder.Entity("GameHubAPI.Models.GameplayModel", b =>
                {
                    b.HasOne("GameHubAPI.Models.JogoModel", "jogo")
                        .WithMany()
                        .HasForeignKey("jogoid");

                    b.HasOne("GameHubAPI.Models.UsuarioModel", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioid");

                    b.Navigation("jogo");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("GameHubAPI.Models.ImagemJogoModel", b =>
                {
                    b.HasOne("GameHubAPI.Models.JogoModel", "jogo")
                        .WithMany()
                        .HasForeignKey("jogoid");

                    b.Navigation("jogo");
                });

            modelBuilder.Entity("GameHubAPI.Models.JogoModel", b =>
                {
                    b.HasOne("GameHubAPI.Models.DesenvolvedoraModel", "desenvolvedora")
                        .WithMany()
                        .HasForeignKey("desenvolvedoraid");

                    b.Navigation("desenvolvedora");
                });

            modelBuilder.Entity("GameHubAPI.Models.NoticiaModel", b =>
                {
                    b.HasOne("GameHubAPI.Models.CategoriaModel", "Categoria")
                        .WithMany()
                        .HasForeignKey("Categoriaid");

                    b.HasOne("GameHubAPI.Models.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usuarioid");

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GameHubAPI.Models.ProgressoConquistaModel", b =>
                {
                    b.HasOne("GameHubAPI.Models.ConquistaModel", "conquista")
                        .WithMany()
                        .HasForeignKey("conquistaid");

                    b.HasOne("GameHubAPI.Models.UsuarioModel", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioid");

                    b.Navigation("conquista");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("GameHubAPI.Models.PromocaoModel", b =>
                {
                    b.HasOne("GameHubAPI.Models.CategoriaModel", "categoria")
                        .WithMany()
                        .HasForeignKey("categoriaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");
                });
#pragma warning restore 612, 618
        }
    }
}
